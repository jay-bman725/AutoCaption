name: Build and Release Electron App

on:
  push:
    branches:
      - main

jobs:
  read-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read version from file
        id: get-version
        run: echo "VERSION=$(cat version)" >> $GITHUB_OUTPUT

  build-linux:
    needs: read-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build for Linux
        run: npx electron-builder --linux
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

      - name: Upload Linux installers
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            dist/*.deb
            dist/*.AppImage

  build-windows:
    needs: read-version
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build for Windows
        run: npx electron-builder --win
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

      - name: Upload Windows installer
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/*.exe

  build-macos:
    needs: read-version
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build macOS x64
        run: npx electron-builder --mac --x64
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

      - name: Upload macOS x64 installer
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-x64
          path: dist/*-x64.dmg

      - name: Build macOS arm64
        run: npx electron-builder --mac --arm64
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

      - name: Upload macOS arm64 installer
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-arm64
          path: dist/*-arm64.dmg

  release:
    needs: [build-linux, build-windows, build-macos, read-version]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: combined-artifacts

      - name: List artifact directory contents
        run: find combined-artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.read-version.outputs.version }}
          name: v${{ needs.read-version.outputs.version }}
          files: |
            combined-artifacts/linux-build/*.deb
            combined-artifacts/linux-build/*.AppImage
            combined-artifacts/windows-build/*.exe
            combined-artifacts/macos-build-x64/*.dmg
            combined-artifacts/macos-build-arm64/*.dmg
          token: ${{ secrets.GH_PAT }}
